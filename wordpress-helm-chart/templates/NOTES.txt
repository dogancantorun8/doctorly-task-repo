1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.wordpress.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "wordpress.serviceName" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.wordpress.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "wordpress.serviceName" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "wordpress.serviceName" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.wordpress.port }}
{{- else if contains "ClusterIP" .Values.service.wordpress.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "{{ include "wordpress.selectorLabels" . | replace "\n" "," }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}

2. WordPress Admin Credentials:
   Username: {{ .Values.wordpress.adminUser }}
   Password: Use the following command to get the password:
   kubectl get secret --namespace {{ .Release.Namespace }} {{ include "wordpress.secretName" . }} -o jsonpath="{.data.wordpress-admin-password}" | base64 -d

3. Database Information:
   MySQL Host: {{ include "wordpress.mysql.serviceName" . }}:{{ .Values.service.mysql.port }}
   Database Name: {{ .Values.mysql.auth.database }}
   Database Username: {{ .Values.mysql.auth.username }}

   Get MySQL root password:
   kubectl get secret --namespace {{ .Release.Namespace }} {{ include "wordpress.mysql.secretName" . }} -o jsonpath="{.data.mysql-root-password}" | base64 -d

   Get MySQL user password:
   kubectl get secret --namespace {{ .Release.Namespace }} {{ include "wordpress.mysql.secretName" . }} -o jsonpath="{.data.mysql-password}" | base64 -d

4. Monitoring and Troubleshooting:

   Check WordPress pods:
   kubectl get pods --namespace {{ .Release.Namespace }} -l "{{ include "wordpress.selectorLabels" . | replace "\n" "," }}"

   Check MySQL pods:
   kubectl get pods --namespace {{ .Release.Namespace }} -l "{{ include "wordpress.mysql.selectorLabels" . | replace "\n" "," }}"

   View WordPress logs:
   kubectl logs --namespace {{ .Release.Namespace }} -l "{{ include "wordpress.selectorLabels" . | replace "\n" "," }}"

   View MySQL logs:
   kubectl logs --namespace {{ .Release.Namespace }} -l "{{ include "wordpress.mysql.selectorLabels" . | replace "\n" "," }}"

   Check service status:
   kubectl get services --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/instance={{ .Release.Name }}"

5. Persistent Storage:
{{- if .Values.wordpress.persistence.enabled }}
   WordPress data is persisted using PVC: {{ include "wordpress.pvcName" . }}
{{- else }}
   WARNING: WordPress data is not persisted. Data will be lost when pods restart.
{{- end }}

{{- if .Values.mysql.persistence.enabled }}
   MySQL data is persisted using StatefulSet volumes
{{- else }}
   WARNING: MySQL data is not persisted. Data will be lost when pods restart.
{{- end }}

6. Scaling WordPress:
{{- if .Values.wordpress.autoscaling.enabled }}
   Horizontal Pod Autoscaler is enabled for WordPress deployment
   Current target: CPU {{ .Values.wordpress.autoscaling.targetCPUUtilizationPercentage }}%
   {{- if .Values.wordpress.autoscaling.targetMemoryUtilizationPercentage }}
   Memory {{ .Values.wordpress.autoscaling.targetMemoryUtilizationPercentage }}%
   {{- end }}
{{- else }}
   To scale WordPress manually:
   kubectl scale --namespace {{ .Release.Namespace }} deployment {{ include "wordpress.fullname" . }}-wordpress --replicas=<desired-replicas>
{{- end }}

7. Backup Recommendations:
   - Backup the MySQL data regularly
   - Backup WordPress uploads directory: /var/www/html/wp-content/uploads
   - Consider using WordPress plugins for automated backups

8. Security Notes:
   - Change default admin credentials after installation
   - Keep WordPress and plugins updated
   - Consider enabling HTTPS with proper certificates
   {{- if not .Values.ingress.tls }}
   - TLS is not configured. Consider enabling SSL/TLS for production use
   {{- end }}

For more information about this chart, visit: https://github.com/your-repo/wordpress-helm-chart