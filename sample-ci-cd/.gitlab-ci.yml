stages:
  - build
  - test

variables:
  IMAGE_TAG: docker.io/$DOCKERHUB_USERNAME/sample-ci:$CI_COMMIT_SHORT_SHA

build:
  stage: build
  image: docker:25
  services:
    - name: docker:25-dind
      command: ["--mtu=1460"]
  before_script:
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin docker.io
  script:
    - docker build -t "$IMAGE_TAG" .
    - docker push "$IMAGE_TAG"
    # Save as an artifact for the test job
    - docker save "$IMAGE_TAG" -o image.tar
    - echo "$IMAGE_TAG" > image_tag
  artifacts:
    paths:
      - image.tar
      - image_tag
    expire_in: 1 week

test:
  stage: test
  image: docker:25
  services:
    - name: docker:25-dind
      command: ["--mtu=1460"]
  needs:
    - job: build
      artifacts: true
  script:
    - docker load -i image.tar
    - TAG=$(cat image_tag)

    # 1) Unit tests run
    - docker run --rm -e PYTHONPATH=/app "$TAG" pytest -q

    # 2) Start the application in the background
    - docker run -d --name app_under_test "$TAG"

    # 3) Perform the health check within the same network namespace
    #    We are sending a request to the /health endpoint using wget with BusyBox.
    - |
      success=0
      for i in $(seq 1 15); do
        if docker run --rm --network container:app_under_test busybox:latest \
             sh -c 'wget -qO- http://127.0.0.1:5000/health | grep -qi "ok"'; then
          echo "Healthcheck passed"
          success=1
          break
        fi
        echo "Waiting for app... ($i/15)"
        sleep 2
      done
      if [ "$success" -ne 1 ]; then
        echo "Healthcheck failed"
        docker logs app_under_test || true
        exit 1
      fi
  after_script:
    - docker rm -f app_under_test || true

